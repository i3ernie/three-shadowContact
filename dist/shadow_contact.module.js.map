{"version":3,"file":"shadow_contact.module.js","sources":["../node_modules/three/examples/jsm/shaders/HorizontalBlurShader.js","../node_modules/three/examples/jsm/shaders/VerticalBlurShader.js","../src/shadow_contact.module.js"],"sourcesContent":["/**\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\n\nvar HorizontalBlurShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"h\": { value: 1.0 / 512.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float h;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 sum = vec4( 0.0 );\",\n\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\",\n\n\t\t\"\tgl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { HorizontalBlurShader };\n","/**\n * Two pass Gaussian blur filter (horizontal and vertical blur shaders)\n * - described in http://www.gamerendering.com/2008/10/11/gaussian-blur-filter-shader/\n *   and used in http://www.cake23.de/traveling-wavefronts-lit-up.html\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n */\n\nvar VerticalBlurShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"v\": { value: 1.0 / 512.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvUv = uv;\",\n\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float v;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tvec4 sum = vec4( 0.0 );\",\n\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\",\n\t\t\"\tsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\",\n\n\t\t\"\tgl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { VerticalBlurShader };\n","import * as THREE from '../node_modules/three/build/three.module.js';\n\t\t\t\t\t\t\nimport { HorizontalBlurShader } from '../node_modules/three/examples/jsm/shaders/HorizontalBlurShader.js';\nimport { VerticalBlurShader } from '../node_modules/three/examples/jsm/shaders/VerticalBlurShader.js';\n\nconst defaults = {\n\tcamera_height : .3,\n\tblur: 3.5,\n\tdarkness: 1,\n\topacity: 1,\n};\n\nconst ContactShadow = function( VP, opts ) {\n\tthis.VP = VP;\n\n\tthis.options = Object.assign({}, defaults, opts);\n\n\tthis.list = [];\n\n\t// the render target that will show the shadows in the plane texture\n\tthis.renderTarget = new THREE.WebGLRenderTarget( 512, 512 );\n\tthis.renderTarget.texture.generateMipmaps = false;\n\n\t// the render target that we will use to blur the first render target\n\tthis.renderTargetBlur = new THREE.WebGLRenderTarget( 512, 512 );\n\tthis.renderTargetBlur.texture.generateMipmaps = false;\n\n\tthis.boundRenderLoop = this.renderLoop.bind(this); \n\t\t\n\n}\nContactShadow.prototype.blurShadow = function( amount ) {\n\n\tthis.blurPlane.visible = true;\n\n\t// blur horizontally and draw in the renderTargetBlur\n\tthis.blurPlane.material = this.horizontalBlurMaterial;\n\tthis.blurPlane.material.uniforms.tDiffuse.value = this.renderTarget.texture;\n\tthis.horizontalBlurMaterial.uniforms.h.value = amount * 1 / 256;\n\n\tthis.VP.renderer.setRenderTarget( this.renderTargetBlur );\n\tthis.VP.renderer.render( this.blurPlane, this.shadowCamera );\n\n\t// blur vertically and draw in the main renderTarget\n\tthis.blurPlane.material = this.verticalBlurMaterial;\n\tthis.blurPlane.material.uniforms.tDiffuse.value = this.renderTargetBlur.texture;\n\tthis.verticalBlurMaterial.uniforms.v.value = amount * 1 / 256;\n\n\tthis.VP.renderer.setRenderTarget( this.renderTarget );\n\tthis.VP.renderer.render( this.blurPlane, this.shadowCamera );\n\n\tthis.blurPlane.visible = false;\n};\n\nContactShadow.prototype.makeShadow = function( plane, opts ){\n\n\tconst planeMaterial = new THREE.MeshBasicMaterial( {\n\t\tmap: this.renderTarget.texture,\n\t\topacity: this.options.opacity,\n\t\ttransparent: true,\n\t\tdepthWrite: false,\n\t});\n\n\tconst scope = this;\n\t\n\n\tplane.addEventListener(\"removed\", function(){\n\t\tscope.VP.loop.remove( scope.boundRenderLoop );\n\t});\n\tplane.addEventListener(\"added\", function(){\n\t\t\n\t\tscope.VP.loop.add( scope.boundRenderLoop );\n\t});\n\n\tlet shadowGroup = new THREE.Group();\n\tshadowGroup.rotateX( -Math.PI );\n\n\tlet geo = plane.geometry;\n\tgeo.computeBoundingBox();\n\n\tconst size = { \n\t\twidth:geo.boundingBox.max.x - geo.boundingBox.min.x, \n\t\theight : geo.boundingBox.max.z - geo.boundingBox.min.z \n\t};\n\n\tthis.plane = new THREE.Mesh( geo, planeMaterial );\n\t// make sure it's rendered after the fillPlane\n\tthis.plane.renderOrder = 1;\n\tshadowGroup.add( this.plane );\n\n\t// the y from the texture is flipped!\n\tthis.plane.scale.y = - 1;\n\n\n\t// the plane onto which to blur the texture\n\tthis.blurPlane = new THREE.Mesh( geo );\n\tthis.blurPlane.visible = false;\n\tshadowGroup.add( this.blurPlane );\n\t\t\t\n\n\t// the camera to render the depth material from\n\tthis.shadowCamera = new THREE.OrthographicCamera( - size.width / 2, size.width / 2, size.height / 2, - size.height / 2, 0, this.options.camera_height );\n\tthis.shadowCamera.rotation.x = Math.PI / 2; // get the camera to look up\n\tshadowGroup.add( this.shadowCamera );\n\n\tthis.cameraHelper = new THREE.CameraHelper( this.shadowCamera );\n\n\t// like MeshDepthMaterial, but goes from black to transparent\n\tthis.depthMaterial = new THREE.MeshDepthMaterial();\n\tthis.depthMaterial.userData.darkness = { value: this.options.darkness };\n\tthis.depthMaterial.onBeforeCompile = function ( shader ) {\n\n\t\tshader.uniforms.darkness = scope.depthMaterial.userData.darkness;\n\t\tshader.fragmentShader = /* glsl */`\n\t\t\tuniform float darkness;\n\t\t\t${shader.fragmentShader.replace(\n\t\t'gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n\t\t'gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );'\n\t)}\n\t\t`;\n\n\t};\n\n\tthis.depthMaterial.depthTest = false;\n\tthis.depthMaterial.depthWrite = false;\n\n\tthis.horizontalBlurMaterial = new THREE.ShaderMaterial( HorizontalBlurShader );\n\tthis.horizontalBlurMaterial.depthTest = false;\n\n\tthis.verticalBlurMaterial = new THREE.ShaderMaterial( VerticalBlurShader );\n\tthis.verticalBlurMaterial.depthTest = false;\n\n\tplane.add( shadowGroup );\n\n\treturn this;\n};\n\nContactShadow.prototype.renderLoop = function( delta, now ) {\n\n\t// remove the background\n\tconst initialBackground = this.VP.scene.background;\n\tthis.VP.scene.background = null;\n\n\t// force the depthMaterial to everything\n\tthis.cameraHelper.visible = false;\n\tthis.VP.scene.overrideMaterial = this.depthMaterial;\n\n\t// render to the render target to get the depths\n\tthis.VP.renderer.setRenderTarget( this.renderTarget );\n\tthis.VP.renderer.render( this.VP.scene, this.shadowCamera );\n\n\t// and reset the override material\n\tthis.VP.scene.overrideMaterial = null;\n\tthis.cameraHelper.visible = true;\n\n\tthis.blurShadow( this.options.blur );\n\n\t// a second pass to reduce the artifacts\n\t// (0.4 is the minimum blur amout so that the artifacts are gone)\n\tthis.blurShadow( this.options.blur * 0.4 );\n\n\t// reset and render the normal scene\n\tthis.VP.renderer.setRenderTarget( null );\n\tthis.VP.scene.background = initialBackground;\n}\n\nContactShadow.make = function( VP, plane, opts ){\n\tlet cs = new ContactShadow( VP, opts );\n\tcs.makeShadow( plane );\n\treturn cs;\n}\n\nexport default ContactShadow;"],"names":["THREE.WebGLRenderTarget","THREE.MeshBasicMaterial","THREE.Group","THREE.Mesh","THREE.OrthographicCamera","THREE.CameraHelper","THREE.MeshDepthMaterial","THREE.ShaderMaterial"],"mappings":"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"}